<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<aop:aspectj-autoproxy />
	<tx:annotation-driven/>    
    
    
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
	</beans:bean>
	
	
	<!-- jsonView 빈 설정 -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json; charset=utf-8"/>
	</beans:bean>
	
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="funding.controller.NaverLoginBO" />

	
	<!-- navermail설정 -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<beans:property name="host" value="smtp.gmail.com"/> <!-- 메이서버 호스트 -->
	<beans:property name="port" value="587"/> <!-- 메이서버 포트번호 -->
	<beans:property name="username" value="heeyeun12"/> <!-- 자신의 이메일 아이디 -->
	<beans:property name="password" value="imtest22@@@@"/> <!-- 자신의 비밀번호 -->

	<!-- 보안연결 SSL과 관련된 설정 --> 
		<beans:property name="javaMailProperties"> 
			<beans:props> 
				<beans:prop key="mail.smtp.auth">true</beans:prop> 
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop> 
				<beans:prop key="mail.smtps.checkserveridentity">true</beans:prop>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop> 
				<beans:prop key="mail.smtps.ssl.trust">*</beans:prop> 
				<beans:prop key="mail.debug">true</beans:prop> 
				<beans:prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- 임시 비밀번호 생성(비밀번호 찾기 기능 구현)을 위한 암호회 bean 객체 생성 -->
	<bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	
	
	
	<!-- 스프링 컴포넌트 어노테이션이 붙은 클래스를 스캔할 패키지를 지정한다 -->
	<!-- 	-> @Controller, @Service -->
	<context:component-scan base-package="a.b.c, funding.controller, funding.service" />
	
	
	
	
</beans:beans>
