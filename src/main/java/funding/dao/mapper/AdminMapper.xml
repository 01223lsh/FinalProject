<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="funding.dao.face.AdminDao">
	
	<select id="selectMemberAll" resultType="funding.dto.Member" parameterType="int">
		select * from (
			select rownum rnum, A.* from(
				select * from member
				order by member_no desc
			)A
		) member
		where rnum between #{startNo} and #{endNo}
	</select>
	   
	<select id="selectBymemberNo" resultType="funding.dto.Member" parameterType="int">
		select * from member
		where member_no = #{memberNo}
	
	</select>
	<select id="selectCntMember" resultType="int">
		select count(*) from member
	</select>
	<select id="selectCntMemberGrade" resultType="int" parameterType="int">
		select count(*) from member
		where grade = ${i}
	
	</select>
	<select id="selectCntMemberSearch" resultType="int" parameterType="string">
		select count(*) from member
		where ${category} like '%'||#{content}||'%'
	</select>
	

	
	<select id="selectByGrade" resultType="funding.dto.Member" parameterType="int">
		<choose>
			<when test='grade == null or grade.equals("")'>
			select * from (
		         select rownum rnum, B.* from(
		            select * from member
		            order by member_no desc
		         )B
		      ) member
		      where rnum between #{paging.startNo} and #{paging.endNo}
			</when>
		
			<when test='grade != null or grade.equals("")'>
		      select * from (
		         select rownum rnum, B.* from(
		            select * from member
		            where grade =#{grade}
		            order by member_no desc
		         )B
		      ) member
		      where rnum between #{paging.startNo} and #{paging.endNo}
			</when>
		</choose>
	</select>
	<update id="gradeUpdate" parameterType="funding.dto.Member">
		update member set grade = #{grade}
		where member_no = #{memberNo}
		
	</update>
	
	<select id="MemberSearch" resultType="funding.dto.Member">
		
		select * from (
		     select rownum rnum, B.* from(
		         select * from member
		         where ${category} like '%'||#{content}||'%'
		          order by member_no desc
		        )B
		     ) member
		where rnum between #{paging.startNo} and #{paging.endNo}
	</select>
	<delete id="DisabledAllDelete" parameterType="int">
		delete from member
		where grade = #{i}
	</delete>
	
	<select id="selectCntNotice" resultType="int">
		select count(*) from notice
	</select>
	<select id="noticeAll" resultType="funding.dto.Notice">
	
		select * from (
		     select rownum rnum, N.* from(
		         select * from notice
		          order by notice_no desc
		        )N
		     ) notice
		where rnum between #{startNo} and #{endNo}
	</select>
	
	<select id="selectByNotice" resultType="funding.dto.Notice">
		select 
		a.notice_no
		,a.title 
		,a.content
		,a."date"  
		,b.file_no
		,b.file_origin
		,b.file_storage
		 from notice a , noticefile b
		where a.notice_no = #{noticeNo}
        and a.notice_no = b.notice_no(+)
        
		
	</select>
	<select id="selectByNoticeFile" resultType="funding.dto.Notice">
		select * from noticefile
		where notice_no = #{noticeNo}
		
	</select>
	<select id="selectBynoticeno" resultType="int">
		select notice_seq.nextval from dual
	</select>
	
	<insert id="noticeWrite" parameterType="funding.dto.Notice">
		insert into notice(notice_no, title, content)
		values(#{noticeNo},#{title},#{content})
	</insert>
	
    <insert id="insertNoticeFile" parameterType="funding.dto.Notice" >
    	insert into noticefile
    	values(noticefile_seq.nextval,#{noticeNo},#{fileOrigin},#{fileStorage})
    </insert>
    
    <select id="selectNoticeFileByFileNo" resultType="funding.dto.Notice">
    	select 
    	file_no fileNo
    	,notice_no noticeNo
    	,file_origin fileOrigin
    	,file_storage fileStorage    	
    	from noticefile
    	where file_no = #{fileNo}
    
    </select>
    <update id="noticeUpdate" parameterType="funding.dto.Notice">
    	update notice set title=#{title}, content=#{content}
    	where notice_no = #{noticeNo}
    </update>
    <update id="updateNoticeFile" parameterType="funding.dto.Notice">
    	update noticefile set file_origin=#{fileOrigin}, file_storage=#{fileStorage}
    	where file_no = #{fileNo}
    </update>
    
    <delete id="noticeDelete" parameterType="funding.dto.Notice">
    	delete from notice
    	where notice_no = #{noticeNo}
    </delete>
    <delete id="noticeFileDelete" parameterType="funding.dto.Notice">
    	delete from noticefile
    	where notice_no = #{noticeNo}
    </delete>

</mapper>














