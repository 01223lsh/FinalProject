<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="funding.dao.face.ProjectViewDao">

<select id="selectProject" parameterType="funding.dto.Project" resultType="funding.dto.Project">
	select pj.*, nvl(sum, 0) sum
	from project pj
	left join (
    select project_no, sum(payment_total) sum
    from payment
    group by project_no    
	) py
    on pj.project_no = py.project_no 
    WHERE pj.project_no = #{projectNo}

</select>

<select id="selectPlan" parameterType="funding.dto.Project" resultType="funding.dto.Project">
	SELECT budget_plan, schedule_plan
	FROM project
	WHERE project_no = #{projectNo}

</select>

<select id="selectNewsList" parameterType="int" resultType="funding.dto.ProjectNews">
	SELECT news_no, news_title, news_date,project_no
	FROM project_news
	WHERE project_no = #{projectNo}
	ORDER BY news_no DESC
	
 </select>
 
 <select id="selectCommentList" parameterType="int" resultType="funding.dto.ProjectComment">
 	SELECT comment_no, comment_content, comment_writer, comment_date,project_no,member_no
 	FROM project_comment
 	WHERE project_no = #{projectNo}
 	ORDER BY comment_no DESC
 
 </select>
 
 <select id="selectContent" parameterType="int" resultType="funding.dto.Project">
 	SELECT project_content FROM project
 	WHERE project_no = #{projectNo}
 
 </select>
 
 <select id="selectNewsView" parameterType="funding.dto.ProjectNews" resultType="funding.dto.ProjectNews">
 	SELECT news_no,news_title, news_content, news_date, project_no
 	FROM project_news
 	WHERE news_no = #{newsNo}
 </select>
 
<insert id="insertNews" parameterType="funding.dto.ProjectNews">
	INSERT INTO project_news(news_no,project_no, news_title, news_content, news_date)
	VALUES (news_seq.nextval, #{projectNo}, #{newsTitle}, #{newsContent}, current_date)
 

</insert>

<delete id="deleteNews" parameterType="funding.dto.ProjectNews">
	DELETE project_news
	WHERE news_no = #{newsNo}
</delete>

<insert id="insertComment" parameterType="funding.dto.ProjectComment">
	INSERT INTO project_comment(comment_no,project_no,comment_content,comment_date,comment_writer,member_no)
	VALUES (comment_seq.nextval, #{projectNo},#{commentContent},current_date, #{commentWriter},#{memberNo})

</insert>

<delete id="deleteComment" parameterType="funding.dto.ProjectComment">
	DELETE project_comment
	WHERE comment_no = #{commentNo}
</delete>

<select id="selectRewardList" parameterType="funding.dto.Project" resultType="funding.dto.Reward">

	SELECT reward_no, project_no, reward_price, reward_amount, reward_name, reward_intro
	FROM reward
	WHERE project_no = #{projectNo}
	ORDER BY reward_no

</select>


<resultMap type="funding.dto.Member" id="Member">
	<id property="nick" column="nick"/>
	<result property="memberNo" column="member_no"/>
	<association property="memberSeller" column="member_no" javaType="funding.dto.MemberSeller">
	<id property="sellerInfo" column="seller_info"/>
	</association>
</resultMap>

<select id="selectSeller" parameterType="funding.dto.Project" resultMap="Member">
	SELECT a.member_no, b.seller_info, a.nick
	FROM member a
	JOIN member_seller b
	ON a.member_no = b.member_no
	WHERE a.member_no = #{memberNo}

</select>
<select id="selectStep" parameterType="int" resultType="funding.dto.Project">

	SELECT project_step, project_no,member_no
	 FROM project
	WHERE project_no = #{projectNo}
</select>

<update id="updateTalktime" parameterType="funding.dto.Project">
	UPDATE project
	SET talk_time = #{talkTime}
	WHERE project_no = #{projectNo}

</update>

<select id="selectContributors" parameterType="int" resultType="int">
	select NVL(contributors, 0) contributors from project p left join
 	( select py.project_no, count(distinct o.member_no) contributors from payment py 
	join order_tb o on py.order_no = o.order_no 
	group by py.project_no) po on p.project_no = po.project_no 
	where p.project_no = #{projectNo}
</select>

<resultMap type="funding.dto.Payment" id="PaymentAndMemeber">
	<id property="projectNo" column="project_no"/>
	<id property="paymentTotal" column="payment_total"/>
	
	<association property="member" javaType="funding.dto.Member">
	<id property="memberNo" column="member_no"/>
	<id property="nick" column="nick"/>
	</association>
</resultMap>

<select id="selectContributorsList" parameterType="funding.dto.Payment" resultMap="PaymentAndMemeber">
	select c.project_no,a.payment_total,b.member_no, b.nick from
	(select member_no ,total_price payment_total,order_no,order_date 
	from order_tb 
	where order_status=1)
	A left outer join
	(select member_no,id,nick from member) B
	 on A.member_no = B.member_no left outer join 
	(select project_no,order_no from payment)C on A.order_no = C.order_no
	WHERE project_no = #{projectNo}
</select>

<update id="updateNews" parameterType="funding.dto.ProjectNews">

		UPDATE project_news
		SET news_title = #{newsTitle}
			, news_content = #{newsContent}
		WHERE news_no = #{newsNo}
</update>



</mapper>